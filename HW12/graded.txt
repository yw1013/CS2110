SUB: (-2) check_malloc_1_size: the in_use field of the metadata was not set to 1 when returned;
SUB: (-2) check_malloc_1_size: the block of data was not malloced to the proper size;
SUB: (-6) check_malloc_1_size: the freelist is not what it should be, which will throw off everything else in your library;
SUB: (-3) check_malloc_1_size: the freelist is not what it should be after a couple of calls to malloc;
SUB: (-2) check_malloc_1_size: the freelist is not what it should be after a couple more calls to malloc;
SUB: (-2) check_malloc_1_addr: the in_use field of the metadata was not set to 1 when returned;
SUB: (-2) check_malloc_1_addr: the block of data was not malloced to the proper size;
SUB: (-6) check_malloc_1_addr: the freelist is not what it should be, which will throw off everything else in your library;
SUB: (-3) check_malloc_1_addr: the freelist is not what it should be after a couple of calls to malloc;
SUB: (-2) check_malloc_1_addr: the freelist is not what it should be after a couple more calls to malloc;
SUB: (-2) check_malloc_2_size: Did not allocate max size;
SUB: (-2) check_malloc_2_addr: Did not allocate max size;
Function #4: check_malloc_3_size SEGFAULTED/TIMED_OUT
Function #5: check_malloc_3_addr SEGFAULTED/TIMED_OUT
Function #6: check_free_1_size SEGFAULTED/TIMED_OUT
Function #7: check_free_1_addr SEGFAULTED/TIMED_OUT
SUB: (-2) check_free_2_size: Did not combine two nodes into one;
SUB: (-2) check_free_2_addr: Did not combine two nodes into one;
SUB: (-2) check_free_3_size: freelist not correct if buddy is first in list;
SUB: (-2) check_free_3_addr: freelist not correct if buddy is first in list;
SUB: (-2) check_free_4_size: freelist not correct if buddy is second in list;
SUB: (-2) check_free_4_addr: freelist not correct if buddy is second in list;
SUB: (-2) check_free_5_size: freelist not correct if buddy is last in list;
SUB: (-2) check_free_5_addr: freelist not correct if buddy is last in list;
SUB: (-2) check_EC_1_size: Error code SINGLE_REQUEST_TOO_LARGE not used correctly.
SUB: (-2) check_EC_1_addr: Error code SINGLE_REQUEST_TOO_LARGE not used correctly.
SUB: (-2) check_EC_2_size: Error code OUT_OF_MEMORY not used correctly.
SUB: (-2) check_EC_2_addr: Error code OUT_OF_MEMORY not used correctly.

Score: 16/100 points
Any difference between points lost and points gained is due to functions segfaulting/timeing out before points can be deducted,
in which case those points are still lost by not adding them.
~Nathan
